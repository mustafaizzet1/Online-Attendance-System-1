<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic QR Code Page</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <!-- Add any necessary styles or scripts -->
    <script src="https://cdn.jsdelivr.net/gh/davidshimjs/qrcodejs/qrcode.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
            flex-direction: column;
            justify-content: center;
            display: block;
            align-items: center;
            background-image: url('background.png');
            background-repeat: repeat;
            background-size: cover;
            overflow: scroll;
        }

        .header {
            background-color: #458bc0;
            color: #fff;
            padding: 10px;
            text-align: center;
        }

        .header span {
            font-size: 24px;
        }

        .header span {
            font-size: 24px;
        }

        .course-name {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }

        .course-name h2 {
            font-size: 24px;
            font-weight: bold;
            margin-top: 40px;
            margin-bottom: 10px;
            color: #333;
        }

        .course-name .blue-line {
            width: 70%;
            height: 8px;
            background-color: #458bc0;
            margin: auto;
            margin-top: 70px;
            position: absolute;
        }

        .container {
            text-align: center;
            margin-top: 20px;
        }

        table {
            background-color: #ecf0f3;
            padding: 20px;
            border-radius: 15px;
            width: 70%;
            margin: auto;
            border: 2px solid #458bc0;
        }

        th,
        td {
            border: 1px solid #458bc0;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #458bc0;
            color: white;
        }


        .container button {
            border: none;
            background-color: #458bc0;
            color: #fff;
            padding: 10px;
            margin: auto;
            margin-top: 20px;
            margin-bottom: 10px;
            width: 50%;
            border-radius: 15px;
            transition: background-color 0.3s;
        }

        .container button:hover {
            background-color: #5a96cc;
        }
    </style>
</head>

<body>
    <div class="header">
        <span>Aktif Yoklama Listesi</span>
    </div>

    <div class="course-name">
        <h2>NESNELERİN İNTERNETİ</h2>
        <div class="blue-line"></div>
    </div>


    <div class="container">
        <table id="studentTable">
            <thead>
                <tr>
                    <th>Öğrenci Numarası</th>
                    <th>Öğrenci Adı</th>
                    <th>Yoklama</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <button type="button" class="btn btn-primary btn-custom" onclick="goBack()">Geri</button>

    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Dummy student data
            const students = [

                // Add more dummy students as needed
            ];
            const urlParams = new URLSearchParams(window.location.search);
            var date = urlParams.get('date');
            date = decodeURIComponent(date);
            const courseId = urlParams.get('courseId');
            fetch(`/helper/liste/${courseId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json(); // Cevabı JSON formatına çevir
                })
                .then(data => {
                    data.forEach(e => {
                        console.log("fsaf")
                        console.log(e.attendanceList.OGRENCI_NO)
                        students.push({ number:e.attendanceList.OGRENCI_NO, name: e.attendanceList.AD+e.attendanceList.SOYAD, attendance: e.attendance })
                    })

                    // Reference to the table body
                    const tbody = document.querySelector('#studentTable tbody');

                    // Add dummy students to the table
                    students.forEach(student => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
        <td>${student.number}</td>
        <td>${student.name}</td>
        <td>${student.attendance}</td>

    `;
                        tbody.appendChild(row);
                    });
                    console.log(data);
                    // Örneğin, gelen veriyi bir tabloya veya listeye ekleyebilirsiniz
                    // Bu kısımda, 'data' üzerinde istediğiniz işlemleri gerçekleştirebilirsiniz
                })
                .catch(error => {
                    console.error('There has been a problem with your fetch operation:', error);
                });

        });

        function goBack() {
            window.history.back();
        }


    </script>

</body>

</html>