<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title> Dersler </title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
      flex-direction: column;
      justify-content: center;
      display: block;
      align-items: center;
      background-image: url('images/background.jpeg');
      background-repeat: repeat;
      background-size: cover;
      overflow: scroll;
    }

    .header {
      background-color: #458bc0;
      color: #fff;
      padding: 10px;
      text-align: center;
    }

    .header span {
      font-size: 24px;
    }

    .course-name {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
    }

    .course-name h2 {
      font-size: 24px;
      font-weight: bold;
      margin-top: 40px;
      margin-bottom: 10px;
      color: #333;
    }

    .course-name .blue-line {
      width: 70%;
      height: 8px;
      background-color: #458bc0;
      margin: auto;
      margin-top: 70px;
      position: absolute;
    }

    .tabs-container {
      position: relative;
      top: 50px;
      display: flex;
      justify-content: center;
      padding: 0 10px;
    }

    .tabs {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
      overflow: hidden;
      border-bottom: 1px solid #ccc;
      border-radius: 5px 5px 0 0;
    }

    .tabs li {
      flex: 1;
    }

    .tabs li.theory-tab,
    .tabs li.practice-tab {
      background-color: #add8e6;
    }

    .tabs li a {
      display: block;
      padding: 10px 20px;
      color: #333;
      text-decoration: none;
      box-shadow: -1px 2px 4px rgba(0, 0, 0, 0.1);
    }

    .tabs li.active {
      background-color: #007bff;
    }

    .tabs li.active a {
      color: white;
    }

    .menu {
      text-align: center;
      margin-top: 10px;
      margin-bottom: 20px;
    }

    .menu .logout-button {
      border: none;
      background-color: #458bc0;
      color: #fff;
      padding: 10px;
      margin-top: 20px;
      margin-bottom: 60px;
      width: 10%;
      border-radius: 15px;
      transition: background-color 0.3s;
      text-decoration: none;
      display: relative;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .menu .logout-button:hover {
      background-color: #5a96cc;
    }

    /* Theory, Practice Table */
    #theoryTable,
    #practiceTable {
      border-collapse: collapse;
      display: none;
      background-color: #ecf0f3;
      padding: 20px;
      border-radius: 15px;
      width: 50%;
      margin: auto;
      margin-top: 49px;
      border: 2px solid #458bc0;
    }

    #theoryTable th,
    #practiceTable th {
      border: 1px solid #458bc0;
      padding: 8px;
      text-align: left;
    }

    #theoryTable td,
    #practiceTable td {
      border: 1px solid #458bc0;
      padding: 8px;
      text-align: center;
    }

    #theoryTable tr:nth-child(even),
    #practiceTable tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    #theoryTable tr:hover,
    #practiceTable tr:hover {
      background-color: #ddd;
    }

    .btn-yoklama-goruntule {
      background-color: #458bc0;
      color: #fff;
      border: none;
      border-radius: 30px;
      text-decoration: none;
      text-align: center;
      width: 50%;
      height: 50px;
      font-size: 12px;
      line-height: 25px;

    }

    .btn-yoklama-goruntule:hover {
      background-color: #5a96cc;
    }

    .btn-yoklama-goruntule:focus,
    .btn-yoklama-goruntule.focus {
      box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
    }

    .btn-yetkilendir {
      background-color: #458bc0;
      color: #fff;
      border: none;
      border-radius: 30px;
      text-decoration: none;
      text-align: center;
      width: 150px;
      height: 50px;
      font-size: 12px;
      line-height: 25px;
      margin: auto;
    }

    .btn-yetkilendir:hover {
      background-color: #5a96cc;
    }

    .btn-yetkilendir:focus,
    .btn-yetkilendir.focus {
      box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
    }

    .btn-qr {
      background-color: #458bc0;
      color: #fff;
      border: none;
      border-radius: 30px;
      text-decoration: none;
      text-align: center;
      width: 150px;
      height: 50px;
      font-size: 12px;
      line-height: 25px;
      margin: auto;
    }

    .btn-qr:hover {
      background-color: #5a96cc;
    }

    .btn-qr:focus,
    .btn-qr.focus {
      box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
    }

    .btn-list {
      background-color: #458bc0;
      color: #fff;
      border: none;
      border-radius: 30px;
      text-decoration: none;
      text-align: center;
      width: 150px;
      height: 50px;
      font-size: 12px;
      margin: auto;

    }

    .btn-list:hover {
      background-color: #5a96cc;
    }

    .btn-list:focus,
    .btn-list.focus {
      box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
    }

    .buttons {
      position: relative;
      margin-top: 20px;
      padding: 10px;
      display: flex;
      justify-content: space-evenly;
    }
  </style>
</head>

<body>
  <div class="header">
    <span>Ders Detayları</span>
  </div>

  <div class="course-name">
    <h2>TEKNİK İNGİLİZCE</h2>
    <div class="blue-line"></div>
  </div>

  <div class="tabs-container">
    <ul class="tabs">
      <li class="theory-tab active"><a href="#" onclick="showTheoryTable()">Teorik</a></li>
      <li class="practice-tab"><a href="#" onclick="showPracticeTable()">Uygulama</a></li>
    </ul>
  </div>

  <table id="theoryTable" class="table">
    <thead>
      <tr>
        <th>Tarih</th>
        <th>Yoklamalar</th>
      </tr>
    </thead>
    <tbody id="theoryTable">
      <!-- Theory table rows -->
    </tbody>
  </table>

  <table id="practiceTable" class="table">
    <thead>
      <tr>
        <th>Tarih</th>
        <th>Yoklamalar</th>
      </tr>
    </thead>
    <tbody id="practiceTable">
      <!-- Practice table rows -->
    </tbody>
  </table>

  <div class="buttons" id="bottom-buttons">
    <button class="btn btn-list" id="studentListButton">Öğrenci Listesi</button>
    



  </div>



  <div class="menu">
    <a href="/teacher-menu" class="logout-button">Geri</a>
  </div>
  <script>


    const authorizeButton = document.createElement('button');
    authorizeButton.classList.add("btn", "btn-yetkilendir");
    authorizeButton.textContent = "Yetkilendir";

    const createQRCodeButton = document.createElement('button');
    createQRCodeButton.classList.add("btn", "btn-qr");
    createQRCodeButton.textContent = "QR Kod Oluştur";

    createQRCodeButton.addEventListener('click', function() {
    // Set the location to the desired page URL
    window.location.href = '/qrcode';
});


    const bottomButtons = document.getElementById('bottom-buttons');
    bottomButtons.appendChild(authorizeButton);
    bottomButtons.appendChild(createQRCodeButton);


  

    const theoryData = [
      { date: "2024-01-01" },
      { date: "2024-01-08" },
      { date: "2024-01-15" },
      { date: "2024-01-01" },
      { date: "2024-01-08" },
      { date: "2024-01-15" },
      { date: "2024-01-01" },
      { date: "2024-01-08" },
      { date: "2024-01-15" },
      { date: "2024-01-01" },
      { date: "2024-01-08" },
      { date: "2024-01-15" },
      { date: "2024-01-01" },
      { date: "2024-01-08" },
      { date: "2024-01-15" },
      { date: "2024-01-23" }
    ];

    const practiceData = [
      { date: "2024-01-02" },
      { date: "2024-01-09" },
      { date: "2024-01-16" }
    ];


    // Initialize the table display style
    document.getElementById("theoryTable").style.display = "none";
    document.getElementById("practiceTable").style.display = "none";

    // Function to show the theory table
    function showTheoryTable() {
      // Hide the practice table
      document.getElementById("practiceTable").style.display = "none";

      // Show the theory table
      document.getElementById("theoryTable").style.display = "table";

      document.querySelector(".tabs li.active").classList.remove("active");
      document.querySelector(".tabs li.theory-tab").classList.add("active");
    }

    // Function to show the practice table
    function showPracticeTable() {
      document.getElementById("theoryTable").style.display = "none";
      document.getElementById("practiceTable").style.display = "table";
      document.querySelector(".tabs li.active").classList.remove("active");
      document.querySelector(".tabs li.practice-tab").classList.add("active");
    }

    function attachEventListeners() {
      document.querySelector(".tabs li.theory-tab a").addEventListener('click', showTheoryTable);
      document.querySelector(".tabs li.practice-tab a").addEventListener('click', showPracticeTable);
    }
    // Function to update the table rows with the given array of QR code creation statuses

    function updateTableRows(tableId, data) {
      const tableBody = document.getElementById(tableId);

      // Remove existing rows
      while (tableBody.firstChild) {
        tableBody.removeChild(tableBody.firstChild);
      }

      // Add new rows based on the QR code creation statuses
      data.forEach(item => {
        const row = document.createElement("tr");
        const dateCell = document.createElement("td");
        const viewAbsenceListCell = document.createElement("td");

        dateCell.textContent = item.date;

        // Create the "View Absence List" button
        const viewAbsenceListButton = document.createElement("button");
        viewAbsenceListButton.classList.add("btn", "btn-yoklama-goruntule");
        viewAbsenceListButton.textContent = "Yoklama Listesini Gör";

        // Add an event listener to the button to redirect to the absence list page
        viewAbsenceListButton.addEventListener('click', () => {
          // Redirect to the absence list page for the specific date
          window.location.href = `/Yoklama-listesi?courseId=${courseId}&date=${item.date}`;
        });

        attachEventListeners({ authorizeButton, createQRCodeButton });

        viewAbsenceListCell.appendChild(viewAbsenceListButton);

        row.appendChild(dateCell);
        row.appendChild(viewAbsenceListCell);

        tableBody.appendChild(row);
      });
    }


    // Example usage:
    updateTableRows("theoryTable", theoryData);
    updateTableRows("practiceTable", practiceData);

    // Function to attach event listeners to the buttons
    function attachEventListeners(buttons) {
      buttons.authorizeButton.addEventListener('click', () => {
        // Redirect to the absence list page for the specific date
        window.location.href = "/Yetkilendir";
      });
      buttons.createQRCodeButton.addEventListener('click', () => {
        // Redirect to the absence list page for the specific date
        window.location.href = `/qrcode`;
      });
    }



    // Get a reference to the student list button
    const studentListButton = document.getElementById("studentListButton");

    // Attach an event listener to the student list button
    studentListButton.addEventListener("click", () => {
      // Redirect the user to the student list page with the course ID parameter
      window.location.href = `/student-list?courseId=${courseId}`;
      console.log("QWE")
    });

    document.addEventListener("DOMContentLoaded", () => {

      const theoryTab = document.querySelector(".tabs .theory-tab a");
      const practiceTab = document.querySelector(".tabs .practice-tab a");

      theoryTab.addEventListener("click", showTheoryTable);
      practiceTab.addEventListener("click", showPracticeTable);

      // Set the initial active tab
      const tableContainer = document.querySelector(".table-container");
      const table = document.querySelector("table.table");
      const bottomButtons = document.getElementById("bottom-buttons");
      const studentListButton = document.getElementById("studentListButton");

      function updateBottomButtonsPosition() {
        // Set the height of the table container based on the height of the table
        tableContainer.style.height = `${table.clientHeight}px`;

        // Update the position of the bottom-buttons container
        const tableBottom = table.getBoundingClientRect().bottom;
        const windowHeight = window.innerHeight;
        const menuBarHeight = 64; // Assuming the height of the menu bar is 64 pixels

        bottomButtons.style.top = `${tableBottom + 10}px`;

        // Make sure the buttons are not positioned below the bottom of the window
        if (bottomButtons.offsetTop + bottomButtons.clientHeight > windowHeight - menuBarHeight) {
          bottomButtons.style.top = `${windowHeight - menuBarHeight - bottomButtons.clientHeight - 10}px`;
        }
      }

      window.addEventListener("resize", updateBottomButtonsPosition);
      updateBottomButtonsPosition();
    });



    showTheoryTable();

    // Retrieve the course ID from the URL parameter
    const urlParams = new URLSearchParams(window.location.search);
    const courseId = urlParams.get('courseId');
    const currentDate = new Date().toISOString().slice(0, 10); // Format: YYYY-MM-DD
    document.getElementById('courseDetails').innerText = `Course ID: ${courseId}`;
    const courseIdDiv = document.getElementById('course-id');
    courseIdDiv.innerHTML = `<h2>Course ID: ${courseId}</h2>`;






    // Add other JavaScript functions (viewAbsenceList, createQRCode, Authorize) here or include them in an external file
  </script>
</body>

</html>